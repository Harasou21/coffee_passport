{"version":3,"file":"js/preview-02826e8b0b1d58ecb91a.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/preview.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/preview.js\");\n","if (document.URL.match( /drinks/ ) || document.URL.match( /edit/ )) {\ndocument.addEventListener('DOMContentLoaded', function(){\n\n// input要素の値に変更があった場合、関数が発火すること\n// 値の変更があった要素から、画像の情報を取得すること\n// 取得した画像情報のURLを生成すること\n\n  const ImageList = document.getElementById('image-list');\n  // 画像のプレビューを表示する場所の要素を取得\n  document.getElementById('drink_tag_image').addEventListener('change', function(e){\n    // input要素に変化があったときにイベント発火\n    // console.log(e);\n    // 選択した画像は発火したイベントeの中のtargetの中の\n    // filesのいう配列に格納されてる\n\n    // 画像が表示されている場合のみ、すでに存在している画像を削除する\n    const imageContent = document.querySelector('img');\n    if (imageContent){\n      imageContent.remove();\n    }\n\n    const file = e.target.files[0];\n    // 次は、取得できた画像情報をプレビューとして表示させるために\n    // 、img要素に付与するsrc属性のURLを生成します。\n    // 取得した画像情報のURLを生成するには、\n    // createObjectURLメソッドを使います。\n    const blob = window.URL.createObjectURL(file);\n    // おさらいになりますが、\n    // windowはブラウザの情報を持つオブジェクトです。\n    // こちらも、先ほど確認した発火イベントeのようにハッシュ構造になっており\n    // 、オブジェクトやメソッドが格納されています。\n\n    // 今回はその中の、URLオブジェクトのcreateObjectURLメソッドを呼び出し、\n    // 変数fileを引数として渡すことで、\n    // 画像のURLを生成しています。\n\n        // 画像を表示するためのdiv要素を生成\n        const imageElement = document.createElement('div');\n        // 表示する画像を生成\n        const blobImage = document.createElement('img');\n        blobImage.setAttribute('src', blob);\n        \n        // => <div><input></div>\n\n        // 生成したHTMLの要素をブラウザに表示させる\n        imageElement.appendChild(blobImage);\n        ImageList.appendChild(imageElement);\n  });\n});\n}\n\nif (document.URL.match( /new/ ) || document.URL.match( /edit/ )) {\n  document.addEventListener('DOMContentLoaded', function(){\n  \n  // input要素の値に変更があった場合、関数が発火すること\n  // 値の変更があった要素から、画像の情報を取得すること\n  // 取得した画像情報のURLを生成すること\n  \n    const ImageList = document.getElementById('image-list');\n    // 画像のプレビューを表示する場所の要素を取得\n    document.getElementById('user_image').addEventListener('change', function(e){\n      // input要素に変化があったときにイベント発火\n      // console.log(e);\n      // 選択した画像は発火したイベントeの中のtargetの中の\n      // filesのいう配列に格納されてる\n  \n      // 画像が表示されている場合のみ、すでに存在している画像を削除する\n      const imageContent = document.querySelector('img');\n      if (imageContent){\n        imageContent.remove();\n      }\n  \n      const file = e.target.files[0];\n      // 次は、取得できた画像情報をプレビューとして表示させるために\n      // 、img要素に付与するsrc属性のURLを生成します。\n      // 取得した画像情報のURLを生成するには、\n      // createObjectURLメソッドを使います。\n      const blob = window.URL.createObjectURL(file);\n      // おさらいになりますが、\n      // windowはブラウザの情報を持つオブジェクトです。\n      // こちらも、先ほど確認した発火イベントeのようにハッシュ構造になっており\n      // 、オブジェクトやメソッドが格納されています。\n  \n      // 今回はその中の、URLオブジェクトのcreateObjectURLメソッドを呼び出し、\n      // 変数fileを引数として渡すことで、\n      // 画像のURLを生成しています。\n  \n          // 画像を表示するためのdiv要素を生成\n          const imageElement = document.createElement('div');\n          // 表示する画像を生成\n          const blobImage = document.createElement('img');\n          blobImage.setAttribute('src', blob);\n          \n          // => <div><input></div>\n  \n          // 生成したHTMLの要素をブラウザに表示させる\n          imageElement.appendChild(blobImage);\n          ImageList.appendChild(imageElement);\n    });\n  });\n  }"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}